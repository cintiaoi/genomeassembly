/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    // Set up of the polishing pipeline
    withName: LONGRANGER_ALIGN {

        ext.args = "--disable-ui --nopreflight"
        if(System.getenv('GITHUB_ACTION') != null ) {
            container = "ghcr.io/sanger-tol/longranger:2.2.2-c3"
        }
    }

    withName: BCFTOOLS_CONSENSUS {
        ext.args = '-i\'QUAL>1 && (GT="AA" || GT="Aa")\' -Hla'
    }

    withName: BCFTOOLS_INDEX {
        ext.args = '--tbi'
    }

    withName: BCFTOOLS_VIEW {
        ext.args = '--no-version -e\'type="ref"||REF~"N"\''
    }

    withName: BCFTOOLS_NORM {
        ext.args = '--no-version'
    }
    // End of Set up of the polishing pipeline

    // Set up of the Hi-C read mapping pipeline
    withName: BWAMEM2_MEM {
        ext.args = { ( "${meta.datatype}" == "hic" ) ? "-5SPCp -R ${meta.read_group}" : "-R ${meta.read_group}" }
    }

    withName: SAMTOOLS_FASTQ {
        ext.args = '-F 0x200 -nt'
    }

    withName: SAMTOOLS_SORT {
        ext.prefix = { "${meta.id}.sorted" }
    }

    withName: SAMTOOLS_COLLATE {
        ext.prefix = { "${meta.id}.collated" }
    }

    withName: SAMTOOLS_FIXMATE {
        ext.args = '-m'
        ext.prefix = { "${meta.id}.fixmate" }
    }

    withName: SAMTOOLS_MARKDUP {
        ext.prefix = { "${meta.id}.markdup" }
    }

    withName: SAMTOOLS_VIEW {
        ext.args = "--output-fmt cram"
    }

    withName: SAMTOOLS_VIEW_MARKDUP {
        ext.args = "-u -F0x400 --output-fmt bam"
    }

    withName: GNU_SORT {
        ext.args = '-k 1,1 -k2,2n'
    }
    // End of Set up of the Hi-C read mapping pipeline

    // Set up of the scffolding pipeline
    withName: 'COOLER_CLOAD' {
        ext.args = 'pairs -0 -c1 2 -p1 3 -c2 6 -p2 7'
    }

    withName: 'PRETEXT_SNAPSHOT' {
        ext.args = '--sequences \"=full\"'
    }

    withName: 'JUICER_TOOLS_PRE' {
        ext.juicer_tools_jar = 'juicer_tools.1.9.9_jcuda.0.8.jar'
        ext.juicer_jvm_params = '-Xms6g -Xmx48g'
    }

    withName: 'JUICER_SNAPSHOT' {
        ext.juicer_snapshot_jar = 'JuiceboxSnapshot-1.0.jar'
        ext.juicer_jvm_params = '-Xmx4g'
    }

    withName: 'JUICER_PRE' {
        ext.args2 = "LC_ALL=C sort -k2,2d -k6,6d -S50G | awk '\$3>=0 && \$7>=0'"
    }
    // End of Set up of the scaffolding  pipeline
}
